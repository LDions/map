import org.gradle.internal.os.OperatingSystem

buildscript {
    repositories {
        mavenLocal()
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/spring-plugin' }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${spring_boot_version}"
        classpath "io.spring.gradle:propdeps-plugin:0.0.10.RELEASE"
        classpath "gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10"
    }
}

plugins {
    id "java"
    id "maven"
    id "idea"
    id "com.google.cloud.tools.jib" version "1.4.0"
    id "com.gorylenko.gradle-git-properties" version "2.0.0"
    id "net.ltgt.apt-eclipse" version "0.21"
    id "net.ltgt.apt-idea" version "0.21"
    id "net.ltgt.apt" version "0.21"
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

apply plugin: 'net.ltgt.apt-idea'

allprojects {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
    }
}

group = "com.ruowei"
version = "1.0.0"

description = ""

sourceCompatibility = 1.8
targetCompatibility = 1.8
assert System.properties["java.specification.version"] == "1.8" || "11" || "12"

apply plugin: "org.springframework.boot"
apply plugin: "propdeps"

apply from: "gradle/docker.gradle"
apply from: 'gradle/querydsl.gradle'

if (project.hasProperty("prod")) {
    apply from: "gradle/profile_prod.gradle"
} else {
    apply from: "gradle/profile_dev.gradle"
}

if (project.hasProperty("war")) {
    apply from: "gradle/war.gradle"
}


idea {
    module {
        excludeDirs += files("node_modules")
    }
}

eclipse {
    sourceSets {
        main {
            java {
                srcDirs += ["build/generated/sources/annotationProcessor/java/main"]
            }
        }
    }
}

if (OperatingSystem.current().isWindows()) {
    task classpathJar(type: Jar) {
        inputs.files sourceSets.main.runtimeClasspath

        archiveName = "runboot-classpath.jar"
        doFirst {
            manifest {
                def classpath = sourceSets.test.runtimeClasspath.files
                attributes "Class-Path": classpath.collect { f -> f.toURI().toString() }.join(" ")
            }
        }
    }

    bootRun {
        classpath = classpathJar.outputs.files
    }
}

defaultTasks "bootRun"

springBoot {
    mainClassName = "com.ruowei.RuoweiApp"
}

if (!project.hasProperty("runList")) {
    project.ext.runList = "main"
}

configurations {
    providedRuntime
    implementation.exclude module: "spring-boot-starter-tomcat"
    querydsl.extendsFrom compileClasspath
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
    implementation platform("io.github.jhipster:jhipster-dependencies:${jhipster_dependencies_version}")
    implementation group: "io.github.jhipster", name: "jhipster-framework"
    implementation "org.springframework.boot:spring-boot-starter-cache"
    implementation "io.dropwizard.metrics:metrics-core"
    implementation "io.micrometer:micrometer-registry-prometheus"
    implementation "net.logstash.logback:logstash-logback-encoder"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-hppc"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-hibernate5"
    implementation "com.fasterxml.jackson.core:jackson-annotations"
    implementation "com.fasterxml.jackson.core:jackson-databind"
    implementation "com.fasterxml.jackson.module:jackson-module-afterburner"
    implementation "javax.cache:cache-api"
    implementation "org.hibernate:hibernate-core"
    implementation "com.zaxxer:HikariCP"
    implementation "org.apache.commons:commons-lang3"
    implementation "commons-io:commons-io"
    implementation "javax.transaction:javax.transaction-api"
    implementation "org.ehcache:ehcache"
    implementation "org.hibernate:hibernate-jcache"
    implementation "org.hibernate:hibernate-entitymanager"
    implementation "org.hibernate:hibernate-envers"
    implementation "org.hibernate.validator:hibernate-validator"
    implementation "org.springframework.boot:spring-boot-loader-tools"
    implementation "org.springframework.boot:spring-boot-starter-mail"
    implementation "org.springframework.boot:spring-boot-starter-activemq"
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-aop"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    implementation "org.springframework.boot:spring-boot-starter-undertow"
    implementation "org.zalando:problem-spring-web"
    implementation "org.springframework.boot:spring-boot-starter-cloud-connectors"
    implementation "org.springframework.security:spring-security-config"
    implementation "org.springframework.security:spring-security-data"
    implementation "org.springframework.security:spring-security-web"
    implementation "io.jsonwebtoken:jjwt-api"
    runtimeOnly "io.jsonwebtoken:jjwt-impl"
    implementation 'org.projectlombok:lombok:1.18.18'
    implementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    implementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    runtimeOnly "io.jsonwebtoken:jjwt-jackson"
    implementation("io.springfox:springfox-swagger2") {
        exclude module: "mapstruct"
    }
    implementation("com.github.xiaoymin:swagger-bootstrap-ui:1.9.6") {
        exclude group: "org.javassist", module: "javassist"
    }
    implementation "io.springfox:springfox-bean-validators"
    implementation "mysql:mysql-connector-java"
    implementation "org.mapstruct:mapstruct:${mapstruct_version}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct_version}"
    annotationProcessor "org.hibernate:hibernate-jpamodelgen:${hibernate_version}"
    annotationProcessor "org.glassfish.jaxb:jaxb-runtime:${jaxb_runtime_version}"
    annotationProcessor("org.springframework.boot:spring-boot-configuration-processor:${spring_boot_version}") {
        exclude group: "com.vaadin.external.google", module: "android-json"
    }
    implementation "org.testng:testng:6.8.17"
    testImplementation "com.jayway.jsonpath:json-path"
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        //exclude module: "junit"
        exclude group: "com.vaadin.external.google", module: "android-json"
    }
    testImplementation "org.springframework.security:spring-security-test"
    testImplementation "org.springframework.boot:spring-boot-test"
    //testImplementation "org.junit.jupiter:junit-jupiter-engine"
    testImplementation "org.assertj:assertj-core"
    //testImplementation "junit:junit"
    testImplementation "org.mockito:mockito-core"
    testImplementation "org.hamcrest:hamcrest-library"
    testImplementation "com.h2database:h2"

    // https://mvnrepository.com/artifact/commons-codec/commons-codec
    compile group: 'commons-codec', name: 'commons-codec', version: '1.13'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-text
    compile group: 'org.apache.commons', name: 'commons-text', version: '1.8'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-collections4
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
    // https://mvnrepository.com/artifact/commons-beanutils/commons-beanutils
    compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
    // https://mvnrepository.com/artifact/org.apache.ant/ant
    compile group: 'org.apache.ant', name: 'ant', version: '1.10.7'
// https://mvnrepository.com/artifact/net.sf.jmimemagic/jmimemagic
    compile group: 'net.sf.jmimemagic', name: 'jmimemagic', version: '0.1.5'
// https://mvnrepository.com/artifact/commons-dbutils/commons-dbutils
    implementation group: 'commons-dbutils', name: 'commons-dbutils', version: '1.7'
// https://mvnrepository.com/artifact/org.apache.commons/commons-dbcp2
    implementation group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.5.0'
// https://mvnrepository.com/artifact/org.springframework.integration/spring-integration-mqtt
    implementation group: 'org.springframework.integration', name: 'spring-integration-mqtt', version: '5.0.7.RELEASE'

// https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.9.0'


}

task cleanResources(type: Delete) {
    delete "build/resources"
}

wrapper {
    gradleVersion = "5.4.1"
}

compileJava.dependsOn compileQuerydsl
compileJava.dependsOn processResources
processResources.dependsOn bootBuildInfo
